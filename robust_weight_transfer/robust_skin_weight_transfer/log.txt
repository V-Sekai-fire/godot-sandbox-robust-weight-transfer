~/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/build ~/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer
-- --    success. find_package() succeeded with Eigen at /mnt/c/Users/ernest.lee/Desktop/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/build/thirdparty/geometry_central/deps/eigen-src
-- Creating target: igl::core (igl_core)
-- Configuring done
-- Generating done
-- Build files have been written to: /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/build
[1/2] Building CXX object CMakeFiles/robust_weight_transfer.dir/test_robust_weight_transfer.cpp.o
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Core:367,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Dense:1,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:2:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::plain_row_type<Eigen::Matrix<double, -1, -1>, long int>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/QR/CompleteOrthogonalDecomposition.h:64:7:   required from ‘class Eigen::CompleteOrthogonalDecomposition<Eigen::Matrix<double, -1, -1> >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:145:67:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:582:55: warning: bitwise operation between different enumeration types ‘Eigen::Matrix<double, -1, -1>::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  582 |                  ExpressionType::PlainObject::Options | RowMajor, 1, ExpressionType::MaxColsAtCompileTime> MatrixRowType;
      |                                               ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:584:55: warning: bitwise operation between different enumeration types ‘Eigen::Matrix<double, -1, -1>::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  584 |                  ExpressionType::PlainObject::Options | RowMajor, 1, ExpressionType::MaxColsAtCompileTime> ArrayRowType;
      |                                               ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:582:55: warning: bitwise operation between different enumeration types ‘Eigen::Matrix<double, -1, -1>::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  582 |                  ExpressionType::PlainObject::Options | RowMajor, 1, ExpressionType::MaxColsAtCompileTime> MatrixRowType;
      |                                               ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:584:55: warning: bitwise operation between different enumeration types ‘Eigen::Matrix<double, -1, -1>::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  584 |                  ExpressionType::PlainObject::Options | RowMajor, 1, ExpressionType::MaxColsAtCompileTime> ArrayRowType;
      |                                               ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::plain_row_type<Eigen::Matrix<double, -1, -1>, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/QR/CompleteOrthogonalDecomposition.h:65:63:   required from ‘class Eigen::CompleteOrthogonalDecomposition<Eigen::Matrix<double, -1, -1> >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:145:67:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:582:55: warning: bitwise operation between different enumeration types ‘Eigen::Matrix<double, -1, -1>::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  582 |                  ExpressionType::PlainObject::Options | RowMajor, 1, ExpressionType::MaxColsAtCompileTime> MatrixRowType;
      |                                               ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:584:55: warning: bitwise operation between different enumeration types ‘Eigen::Matrix<double, -1, -1>::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  584 |                  ExpressionType::PlainObject::Options | RowMajor, 1, ExpressionType::MaxColsAtCompileTime> ArrayRowType;
      |                                               ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:582:55: warning: bitwise operation between different enumeration types ‘Eigen::Matrix<double, -1, -1>::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  582 |                  ExpressionType::PlainObject::Options | RowMajor, 1, ExpressionType::MaxColsAtCompileTime> MatrixRowType;
      |                                               ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:584:55: warning: bitwise operation between different enumeration types ‘Eigen::Matrix<double, -1, -1>::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  584 |                  ExpressionType::PlainObject::Options | RowMajor, 1, ExpressionType::MaxColsAtCompileTime> ArrayRowType;
      |                                               ~~~~~~~~^~~~~~~~~~
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Core:370:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NumTraits.h: In instantiation of ‘struct Eigen::NumTraits<Eigen::Array<double, 1, 3, 1, 1, 3> >’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/Meta.h:400:41:   recursively required by substitution of ‘template<class T, class BinaryOp> struct Eigen::ScalarBinaryOpTraits<T, typename Eigen::NumTraits<typename Eigen::internal::enable_if<Eigen::NumTraits<T>::IsComplex, T>::type>::Real, BinaryOp> [with T = Eigen::Array<double, 1, 3, 1, 1, 3>; BinaryOp = Eigen::internal::scalar_product_op<Eigen::Array<double, 1, 3, 1, 1, 3>, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/Meta.h:400:41:   required by substitution of ‘template<class C> static Eigen::internal::meta_yes Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<Eigen::Array<double, 1, 3, 1, 1, 3>, double, Eigen::internal::scalar_product_op<Eigen::Array<double, 1, 3, 1, 1, 3>, double> > >::testFunctor(const typename C::ReturnType*) [with C = Eigen::ScalarBinaryOpTraits<Eigen::Array<double, 1, 3, 1, 1, 3>, double, Eigen::internal::scalar_product_op<Eigen::Array<double, 1, 3, 1, 1, 3>, double> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/Meta.h:403:39:   required from ‘struct Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<Eigen::Array<double, 1, 3, 1, 1, 3>, double, Eigen::internal::scalar_product_op<Eigen::Array<double, 1, 3, 1, 1, 3>, double> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required by substitution of ‘template<class T> typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type, double>, const typename Eigen::internal::plain_constant_type<Eigen::Array<double, 1, 3, 1, 1, 3>, typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type>::type, const Eigen::Array<double, 1, 3, 1, 1, 3> > >::type Eigen::operator*(const T&, const ArrayBase<Array<double, 1, 3, 1, 1, 3> >::StorageBaseType&) [with T = Eigen::Array<double, 1, 3, 1, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/barycentric_coordinates.cpp:91:20:   required from ‘void igl::barycentric_coordinates(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&) [with DerivedP = Eigen::Matrix<double, 1, 3>; DerivedA = Eigen::Matrix<double, 1, 3>; DerivedB = Eigen::Matrix<double, 1, 3>; DerivedC = Eigen::Matrix<double, 1, 3>; DerivedL = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:30:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NumTraits.h:209:96: warning: arithmetic between different enumeration types ‘Eigen::Array<double, 1, 3, 1, 1, 3>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  209 |     ReadCost = ArrayType::SizeAtCompileTime==Dynamic ? HugeCost : ArrayType::SizeAtCompileTime * NumTraits<Scalar>::ReadCost,
      |                                                                              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NumTraits.h:210:96: warning: arithmetic between different enumeration types ‘Eigen::Array<double, 1, 3, 1, 1, 3>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  210 |     AddCost  = ArrayType::SizeAtCompileTime==Dynamic ? HugeCost : ArrayType::SizeAtCompileTime * NumTraits<Scalar>::AddCost,
      |                                                                              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NumTraits.h:211:96: warning: arithmetic between different enumeration types ‘Eigen::Array<double, 1, 3, 1, 1, 3>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  211 |     MulCost  = ArrayType::SizeAtCompileTime==Dynamic ? HugeCost : ArrayType::SizeAtCompileTime * NumTraits<Scalar>::MulCost
      |                                                                              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NumTraits.h: In instantiation of ‘struct Eigen::NumTraits<Eigen::Array<double, 1, 1, 0, 1, 1> >’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/Meta.h:400:41:   recursively required by substitution of ‘template<class T, class BinaryOp> struct Eigen::ScalarBinaryOpTraits<T, typename Eigen::NumTraits<typename Eigen::internal::enable_if<Eigen::NumTraits<T>::IsComplex, T>::type>::Real, BinaryOp> [with T = Eigen::Array<double, 1, 1, 0, 1, 1>; BinaryOp = Eigen::internal::scalar_product_op<Eigen::Array<double, 1, 1, 0, 1, 1>, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/Meta.h:400:41:   required by substitution of ‘template<class C> static Eigen::internal::meta_yes Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<Eigen::Array<double, 1, 1, 0, 1, 1>, double, Eigen::internal::scalar_product_op<Eigen::Array<double, 1, 1, 0, 1, 1>, double> > >::testFunctor(const typename C::ReturnType*) [with C = Eigen::ScalarBinaryOpTraits<Eigen::Array<double, 1, 1, 0, 1, 1>, double, Eigen::internal::scalar_product_op<Eigen::Array<double, 1, 1, 0, 1, 1>, double> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/Meta.h:403:39:   required from ‘struct Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<Eigen::Array<double, 1, 1, 0, 1, 1>, double, Eigen::internal::scalar_product_op<Eigen::Array<double, 1, 1, 0, 1, 1>, double> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required by substitution of ‘template<class T> typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type, double>, const typename Eigen::internal::plain_constant_type<Eigen::Array<double, 1, 1, 0, 1, 1>, typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type>::type, const Eigen::Array<double, 1, 1, 0, 1, 1> > >::type Eigen::operator*(const T&, const ArrayBase<Array<double, 1, 1, 0, 1, 1> >::StorageBaseType&) [with T = Eigen::Array<double, 1, 1, 0, 1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/barycentric_coordinates.cpp:96:23:   required from ‘void igl::barycentric_coordinates(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&) [with DerivedP = Eigen::Matrix<double, 1, 3>; DerivedA = Eigen::Matrix<double, 1, 3>; DerivedB = Eigen::Matrix<double, 1, 3>; DerivedC = Eigen::Matrix<double, 1, 3>; DerivedL = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:30:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NumTraits.h:209:96: warning: arithmetic between different enumeration types ‘Eigen::Array<double, 1, 1, 0, 1, 1>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  209 |     ReadCost = ArrayType::SizeAtCompileTime==Dynamic ? HugeCost : ArrayType::SizeAtCompileTime * NumTraits<Scalar>::ReadCost,
      |                                                                              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NumTraits.h:210:96: warning: arithmetic between different enumeration types ‘Eigen::Array<double, 1, 1, 0, 1, 1>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  210 |     AddCost  = ArrayType::SizeAtCompileTime==Dynamic ? HugeCost : ArrayType::SizeAtCompileTime * NumTraits<Scalar>::AddCost,
      |                                                                              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NumTraits.h:211:96: warning: arithmetic between different enumeration types ‘Eigen::Array<double, 1, 1, 0, 1, 1>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  211 |     MulCost  = ArrayType::SizeAtCompileTime==Dynamic ? HugeCost : ArrayType::SizeAtCompileTime * NumTraits<Scalar>::MulCost
      |                                                                              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/SparseCore:47,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Sparse:26,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/slice.h:34,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/sort.cpp:11,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/sort.h:88,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/doublearea.cpp:11,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/doublearea.h:106,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:12,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.h:490,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:9,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.h:65,
                 from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:9:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::internal::IteratorBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:1066:93:   required from ‘Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:136:10:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h:27:57: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_opposite_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
   27 |       CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::SparseMatrix<double> >, Eigen::internal::IteratorBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::SparseMatrix<double> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:682:97:   required from ‘Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::SparseMatrix(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:137:55:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h:27:57: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_inverse_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Core:366:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, -1, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:17:21:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<int, -1, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = int; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:18:21:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<int, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<int, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, -1, -1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:19:21:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, 1, 3>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = 1; int _Cols = 3; int _Options = 1; int _MaxRows = 1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:29:28:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/SparseCore:48:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h: In instantiation of ‘struct Eigen::internal::sparse_conjunction_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, Eigen::internal::IndexBased, Eigen::internal::IteratorBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:345:8:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, Eigen::internal::IndexBased, Eigen::internal::IteratorBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:682:97:   required from ‘Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::SparseMatrix(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:41:32:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:535:54: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  535 |     CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                        ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h: In instantiation of ‘struct Eigen::internal::sparse_conjunction_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::SparseMatrix<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::IteratorBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:354:8:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::SparseMatrix<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::IteratorBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::SparseMatrix<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:1066:93:   required from ‘Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::SparseMatrix<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _Scalar = double; int _Options = 0; _StorageIndex = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:200:19:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:610:54: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  610 |     CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                        ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<int, -1, -1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:301:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T0&, const T1&) [with T0 = int; T1 = int; _Scalar = int; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:250:35:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<int, -1, -1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<int, -1, -1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<int, 1, 3>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:535:29:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<int, -1, -1>, 1, -1, false>; Derived = Eigen::Matrix<int, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:377:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<int, -1, -1>, 1, -1, false>; _Scalar = int; int _Rows = 1; int _Cols = 3; int _Options = 1; int _MaxRows = 1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:42:60:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<int, 1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<int, 1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, 1, -1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:535:29:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; Derived = Eigen::Matrix<double, 1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:377:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; _Scalar = double; int _Rows = 1; int _Cols = -1; int _Options = 1; int _MaxRows = 1; int _MaxCols = -1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:44:64:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 1, -1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 1, -1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, 3, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:535:29:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:377:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:87:111:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Core:510:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h: In instantiation of ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > > >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:144:54:   required from ‘bool Eigen::DenseBase<Derived>::hasNaN() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:158:40:   required from ‘bool Eigen::DenseBase<Derived>::allFinite() const [with Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:102:28:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:60: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<bool>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
   86 |           && SizeAtCompileTime * (Evaluator::CoeffReadCost + NumTraits<Scalar>::AddCost) <= EIGEN_UNROLLING_LIMIT
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<int, -1, 2>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = int; int _Rows = -1; int _Cols = 2; int _Options = 0; int _MaxRows = -1; int _MaxCols = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:28:25:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<int, -1, 2> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<int, -1, 2> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, -1, 3>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = -1; int _Cols = 3; int _Options = 0; int _MaxRows = -1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:43:30:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Array<double, 1, 3, 1, 1, 3>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:535:29:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 1, 3> > >; Derived = Eigen::Array<double, 1, 3, 1, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:242:29:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const Eigen::EigenBase<OtherDerived>&, typename Eigen::internal::enable_if<Eigen::internal::is_convertible<typename OtherDerived::Scalar, typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar>::value, PrivateType>::type) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 1, 3> > >; _Scalar = double; int _Rows = 1; int _Cols = 3; int _Options = 1; int _MaxRows = 1; int _MaxCols = 3; typename Eigen::internal::enable_if<Eigen::internal::is_convertible<typename OtherDerived::Scalar, typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar>::value, PrivateType>::type = Eigen::Array<double, 1, 3, 1, 1, 3>::PrivateType; typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar = double; typename OtherDerived::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/barycentric_coordinates.cpp:88:16:   required from ‘void igl::barycentric_coordinates(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&) [with DerivedP = Eigen::Matrix<double, 1, 3>; DerivedA = Eigen::Matrix<double, 1, 3>; DerivedB = Eigen::Matrix<double, 1, 3>; DerivedC = Eigen::Matrix<double, 1, 3>; DerivedL = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:30:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, 1, 3, 1, 1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, 1, 3, 1, 1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Array<double, 1, 1, 0, 1, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:535:29:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::member_sum<double>, 1>; Derived = Eigen::Array<double, 1, 1, 0, 1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:242:29:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const Eigen::EigenBase<OtherDerived>&, typename Eigen::internal::enable_if<Eigen::internal::is_convertible<typename OtherDerived::Scalar, typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar>::value, PrivateType>::type) [with OtherDerived = Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::member_sum<double>, 1>; _Scalar = double; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1; typename Eigen::internal::enable_if<Eigen::internal::is_convertible<typename OtherDerived::Scalar, typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar>::value, PrivateType>::type = Eigen::Array<double, 1, 1, 0, 1, 1>::PrivateType; typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar = double; typename OtherDerived::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/barycentric_coordinates.cpp:91:11:   required from ‘void igl::barycentric_coordinates(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&) [with DerivedP = Eigen::Matrix<double, 1, 3>; DerivedA = Eigen::Matrix<double, 1, 3>; DerivedB = Eigen::Matrix<double, 1, 3>; DerivedC = Eigen::Matrix<double, 1, 3>; DerivedL = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:30:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, 1, 1, 0, 1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, 1, 1, 0, 1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Core:440:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:98:46:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:128:31:   required from ‘const Eigen::MatrixBase<Derived>::PlainObject Eigen::MatrixBase<Derived>::normalized() const [with Derived = Eigen::Matrix<double, -1, 1>; PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:59:29:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs2_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = -1; int _Cols = 6; int _Options = 0; int _MaxRows = -1; int _MaxCols = 6]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:65:51:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 6, 0, -1, 6> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 6, 0, -1, 6> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, -1, 4>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = -1; int _Cols = 4; int _Options = 0; int _MaxRows = -1; int _MaxCols = 4]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:67:51:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 4> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 4> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:98:46:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:110:23:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:196:133:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs2_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Fuzzy.h:27:50:   required from ‘static bool Eigen::internal::isApprox_selector<Derived, OtherDerived, is_integer>::run(const Derived&, const OtherDerived&, const typename Derived::RealScalar&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Matrix<double, -1, -1>; bool is_integer = false; typename Derived::RealScalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Fuzzy.h:108:65:   required from ‘bool Eigen::DenseBase<Derived>::isApprox(const Eigen::DenseBase<OtherDerived>&, const RealScalar&) const [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>; RealScalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:262:33:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs2_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, -1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, -1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Fuzzy.h:27:105:   required from ‘static bool Eigen::internal::isApprox_selector<Derived, OtherDerived, is_integer>::run(const Derived&, const OtherDerived&, const typename Derived::RealScalar&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Matrix<double, -1, -1>; bool is_integer = false; typename Derived::RealScalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Fuzzy.h:108:65:   required from ‘bool Eigen::DenseBase<Derived>::isApprox(const Eigen::DenseBase<OtherDerived>&, const RealScalar&) const [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>; RealScalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:262:33:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs2_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Fuzzy.h:27:50:   required from ‘static bool Eigen::internal::isApprox_selector<Derived, OtherDerived, is_integer>::run(const Derived&, const OtherDerived&, const typename Derived::RealScalar&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Matrix<double, -1, 1>; bool is_integer = false; typename Derived::RealScalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Fuzzy.h:108:65:   required from ‘bool Eigen::DenseBase<Derived>::isApprox(const Eigen::DenseBase<OtherDerived>&, const RealScalar&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>; RealScalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:301:29:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs2_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h: In instantiation of ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<std::equal_to<int>, const Eigen::Matrix<int, -1, 1>, const Eigen::Matrix<int, -1, 1> >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/MatrixBase.h:289:35:   required from ‘bool Eigen::MatrixBase<Derived>::operator==(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<int, -1, 1>; Derived = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Fuzzy.h:37:23:   required from ‘static bool Eigen::internal::isApprox_selector<Derived, OtherDerived, true>::run(const Derived&, const OtherDerived&, const typename Derived::RealScalar&) [with Derived = Eigen::Matrix<int, -1, 1>; OtherDerived = Eigen::Matrix<int, -1, 1>; typename Derived::RealScalar = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Fuzzy.h:108:65:   required from ‘bool Eigen::DenseBase<Derived>::isApprox(const Eigen::DenseBase<OtherDerived>&, const RealScalar&) const [with OtherDerived = Eigen::Matrix<int, -1, 1>; Derived = Eigen::Matrix<int, -1, 1>; RealScalar = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:342:26:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:60: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<std::equal_to<int>, const Eigen::Matrix<int, -1, 1>, const Eigen::Matrix<int, -1, 1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, int, int>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<bool>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
   86 |           && SizeAtCompileTime * (Evaluator::CoeffReadCost + NumTraits<Scalar>::AddCost) <= EIGEN_UNROLLING_LIMIT
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Array<double, -1, 3>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:170:35:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >; _Scalar = double; int _Rows = -1; int _Cols = 3; int _Options = 0; int _MaxRows = -1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >; EvalReturnType = const Eigen::Array<double, -1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/edge_lengths.cpp:18:30:   required from ‘void igl::edge_lengths(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedL = Eigen::Matrix<double, -1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:44:22:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, -1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, -1, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Functor = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Func = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Derived = Eigen::Matrix<double, 1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:233:89:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Functor = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Func = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >; Derived = Eigen::Matrix<double, 1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:233:89:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, -1, 2>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = -1; int _Cols = 2; int _Options = 0; int _MaxRows = -1; int _MaxCols = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:21:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 2> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 2> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, 1, 2>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = 1; int _Cols = 2; int _Options = 1; int _MaxRows = 1; int _MaxCols = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:552:57:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 2> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 2> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:52:73:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, -1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:52:73:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Array<double, -1, 6, 0, -1, 6>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:170:35:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; _Scalar = double; int _Rows = -1; int _Cols = 6; int _Options = 0; int _MaxRows = -1; int _MaxCols = 6]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; EvalReturnType = const Eigen::Array<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/edge_lengths.cpp:18:30:   required from ‘void igl::edge_lengths(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:66:19:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, -1, 6, 0, -1, 6> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, -1, 6, 0, -1, 6> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:37:51:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >; U = Eigen::Matrix<double, 1, 3>; bool NeedToTranspose = false; ResScalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 1, 3>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/volume.cpp:30:24:   required from ‘void igl::volume(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedT = Eigen::Matrix<int, -1, -1>; Derivedvol = Eigen::Matrix<double, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:52:11:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true> >, Eigen::internal::IteratorBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseRedux.h:21:32:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::SparseMatrixBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseDot.h:79:46:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::SparseMatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseDot.h:87:15:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::SparseMatrixBase<Derived>::norm() const [with Derived = Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseQR/SparseQR.h:403:85:   required from ‘void Eigen::SparseQR<MatrixType, OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseQR/SparseQR.h:118:7:   required from ‘void Eigen::SparseQR<MatrixType, OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:148:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseUnaryOp.h:27:57: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true> >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs2_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
   27 |       CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:293:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = long int; _Scalar = bool; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PermutationMatrix.h:257:63:   required from ‘Eigen::Index Eigen::PermutationBase<Derived>::determinant() const [with Derived = Eigen::PermutationMatrix<-1, -1, int>; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:684:36:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<bool, -1, 1, 0, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<bool, -1, 1, 0, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, 2, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:261:35:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:66:3:   required from ‘Eigen::AlignedBox<Scalar, Dim>::AlignedBox() [with _Scalar = double; int _AmbientDim = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.h:54:9:   required from ‘igl::AABB<DerivedV, DIM>::AABB() [with DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:44:28:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::member_sum<double>, 1> >’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Array<double, 1, 1, 0, 1, 1>; SrcXprType = Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, member_sum<double>, 1>; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Array<double, 1, 1, 0, 1, 1>; SrcXprType = Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::member_sum<double>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Array<double, 1, 1, 0, 1, 1>; Src = Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, member_sum<double>, 1>; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::member_sum<double>, 1>; Derived = Eigen::Array<double, 1, 1, 0, 1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::member_sum<double>, 1>; Derived = Eigen::Array<double, 1, 1, 0, 1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:242:29:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const Eigen::EigenBase<OtherDerived>&, typename Eigen::internal::enable_if<Eigen::internal::is_convertible<typename OtherDerived::Scalar, typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar>::value, PrivateType>::type) [with OtherDerived = Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::member_sum<double>, 1>; _Scalar = double; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1; typename Eigen::internal::enable_if<Eigen::internal::is_convertible<typename OtherDerived::Scalar, typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar>::value, PrivateType>::type = Eigen::Array<double, 1, 1, 0, 1, 1>::PrivateType; typename Eigen::internal::traits<Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::Scalar = double; typename OtherDerived::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/barycentric_coordinates.cpp:91:11:   required from ‘void igl::barycentric_coordinates(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&) [with DerivedP = Eigen::Matrix<double, 1, 3>; DerivedA = Eigen::Matrix<double, 1, 3>; DerivedB = Eigen::Matrix<double, 1, 3>; DerivedC = Eigen::Matrix<double, 1, 3>; DerivedL = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:30:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:1287:35: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PartialReduxExpr<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::member_sum<double>, 1> >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 3, 1, 1, 3>, const Eigen::Array<double, 1, 3, 1, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
 1287 |                   : TraversalSize * evaluator<ArgType>::CoeffReadCost + int(CostOpType::value),
      |                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, const Eigen::Array<double, 1, 1, 0, 1, 1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, const Eigen::Array<double, 1, 1, 0, 1, 1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, const Eigen::Array<double, 1, 1, 0, 1, 1> >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, const Eigen::Array<double, 1, 1, 0, 1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, const Eigen::Array<double, 1, 1, 0, 1, 1> >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, const Eigen::Array<double, 1, 1, 0, 1, 1> >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, const Eigen::Array<double, 1, 1, 0, 1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, const Eigen::Array<double, 1, 1, 0, 1, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/barycentric_coordinates.cpp:98:12:   required from ‘void igl::barycentric_coordinates(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&) [with DerivedP = Eigen::Matrix<double, 1, 3>; DerivedA = Eigen::Matrix<double, 1, 3>; DerivedB = Eigen::Matrix<double, 1, 3>; DerivedC = Eigen::Matrix<double, 1, 3>; DerivedL = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:30:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, 1, 1, 0, 1, 1>, const Eigen::Array<double, 1, 1, 0, 1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Array<double, 1, 1, 0, 1, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > >; Derived = Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/barycentric_coordinates.cpp:100:12:   required from ‘void igl::barycentric_coordinates(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&) [with DerivedP = Eigen::Matrix<double, 1, 3>; DerivedA = Eigen::Matrix<double, 1, 3>; DerivedB = Eigen::Matrix<double, 1, 3>; DerivedC = Eigen::Matrix<double, 1, 3>; DerivedL = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:30:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, 1, 1, 1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false>, const Eigen::Block<Eigen::Matrix<double, 1, 3>, 1, 1, false> > > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:377:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:131:30:   required from ‘const Eigen::MatrixBase<Derived>::PlainObject Eigen::MatrixBase<Derived>::normalized() const [with Derived = Eigen::Matrix<double, -1, 1>; PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:59:29:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Array<int, 2, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:178:35:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T0&, const T1&) [with T0 = int; T1 = int; _Scalar = int; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMap.h:126:79:   required from ‘Eigen::SparseMapBase<Derived, 0>::SparseMapBase(Eigen::Index, Eigen::Index, Eigen::Index, IndexPointer, IndexPointer, ScalarPointer, IndexPointer) [with Derived = Eigen::Map<Eigen::SparseMatrix<double>, 0, Eigen::Stride<0, 0> >; Eigen::Index = long int; IndexPointer = int*; ScalarPointer = double*]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMap.h:197:87:   required from ‘Eigen::SparseMapBase<Derived, 1>::SparseMapBase(Eigen::Index, Eigen::Index, Eigen::Index, StorageIndex*, StorageIndex*, Scalar*, StorageIndex*) [with Derived = Eigen::Map<Eigen::SparseMatrix<double>, 0, Eigen::Stride<0, 0> >; Eigen::Index = long int; StorageIndex = int; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMap.h:247:87:   required from ‘Eigen::Map<Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>, Options, StrideType>::Map(Eigen::Index, Eigen::Index, Eigen::Index, StorageIndex*, StorageIndex*, Scalar*, StorageIndex*) [with MatScalar = double; int MatOptions = 0; MatIndex = int; int Options = 0; StrideType = Eigen::Stride<0, 0>; Eigen::Index = long int; StorageIndex = int; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/MappedSparseMatrix.h:43:86:   required from ‘Eigen::MappedSparseMatrix<_Scalar, _Flags, _StorageIndex>::MappedSparseMatrix(Eigen::Index, Eigen::Index, Eigen::Index, StorageIndex*, StorageIndex*, Scalar*, StorageIndex*) [with _Scalar = double; int _Flags = 0; _StorageIndex = int; Eigen::Index = long int; StorageIndex = int; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:100:32:   required from ‘Eigen::SparseLU<_MatrixType, _OrderingType>::SparseLU() [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.h:165:13:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<int, 2, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<int, 2, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, 2, 2>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Map.h:159:52:   required from ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(PointerArgType, Eigen::Index, Eigen::Index, const StrideType&) [with PlainObjectType = Eigen::Matrix<double, 2, 2>; int MapOptions = 0; StrideType = Eigen::OuterStride<>; PointerArgType = double*; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h:58:94:   required from ‘static void Eigen::internal::LU_kernel_bmod<SegSizeAtCompileTime>::run(Eigen::Index, BlockScalarVector&, ScalarVector&, ScalarVector&, Eigen::Index&, Eigen::Index, Eigen::Index, IndexVector&, Eigen::Index, Eigen::Index) [with BlockScalarVector = Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; int SegSizeAtCompileTime = 2; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:210:53:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 2> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 2> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<double, 3, 3>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Map.h:159:52:   required from ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(PointerArgType, Eigen::Index, Eigen::Index, const StrideType&) [with PlainObjectType = Eigen::Matrix<double, 3, 3>; int MapOptions = 0; StrideType = Eigen::OuterStride<>; PointerArgType = double*; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h:58:94:   required from ‘static void Eigen::internal::LU_kernel_bmod<SegSizeAtCompileTime>::run(Eigen::Index, BlockScalarVector&, ScalarVector&, ScalarVector&, Eigen::Index&, Eigen::Index, Eigen::Index, IndexVector&, Eigen::Index, Eigen::Index) [with BlockScalarVector = Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; int SegSizeAtCompileTime = 3; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:211:53:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 3> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:439:46:   required from ‘bool igl::min_quad_with_fixed_solve(const min_quad_with_fixed_data<T>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with T = double; DerivedB = Eigen::Matrix<double, -1, -1>; DerivedY = Eigen::Matrix<double, -1, -1>; DerivedBeq = Eigen::Matrix<double, -1, -1>; DerivedZ = Eigen::Matrix<double, -1, -1>; Derivedsol = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:162:50:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Core:479:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Visitor.h: In instantiation of ‘void Eigen::DenseBase<Derived>::visit(Visitor&) const [with Visitor = Eigen::internal::max_coeff_visitor<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Visitor.h:266:14:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff(IndexType*) const [with IndexType = int; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:256:34:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedSI = Eigen::Matrix<int, -1, -1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:196:9:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 2>; Derivedbb_maxs = Eigen::Matrix<double, -1, 2>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Visitor.h:114:33: warning: arithmetic between different enumeration types ‘Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >::<unnamed enum>’ and ‘Eigen::internal::visitor_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  114 |            && SizeAtCompileTime * ThisEvaluator::CoeffReadCost + (SizeAtCompileTime-1) * internal::functor_traits<Visitor>::Cost <= EIGEN_UNROLLING_LIMIT
      |               ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Visitor.h: In instantiation of ‘void Eigen::DenseBase<Derived>::visit(Visitor&) const [with Visitor = Eigen::internal::max_coeff_visitor<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Visitor.h:266:14:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff(IndexType*) const [with IndexType = int; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:256:34:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedSI = Eigen::Matrix<int, -1, -1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:196:9:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 3>; Derivedbb_maxs = Eigen::Matrix<double, -1, 3>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Visitor.h:114:33: warning: arithmetic between different enumeration types ‘Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >::<unnamed enum>’ and ‘Eigen::internal::visitor_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:80:24:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:80:24:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:80:24:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:80:24:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:80:24:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Functor = mul_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Func = mul_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Func = mul_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ArrayBase.h:207:18:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator*=(const Eigen::ArrayBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Derived = Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:88:32:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseUnaryOp<scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseUnaryOp<scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseUnaryOp<scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseUnaryOp<scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:714:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:53:9:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:714:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:494:8:   required from ‘bool igl::min_quad_with_fixed_solve(const min_quad_with_fixed_data<T>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with T = double; DerivedB = Eigen::Matrix<double, -1, -1>; DerivedY = Eigen::Matrix<double, -1, -1>; DerivedBeq = Eigen::Matrix<double, -1, -1>; DerivedZ = Eigen::Matrix<double, -1, -1>; Derivedsol = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:162:50:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::unary_evaluator<Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, Eigen::internal::IndexBased, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:714:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> > >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:494:8:   required from ‘bool igl::min_quad_with_fixed_solve(const min_quad_with_fixed_data<T>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with T = double; DerivedB = Eigen::Matrix<double, -1, -1>; DerivedY = Eigen::Matrix<double, -1, -1>; DerivedBeq = Eigen::Matrix<double, -1, -1>; DerivedZ = Eigen::Matrix<double, -1, -1>; Derivedsol = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:162:50:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::Matrix<double, -1, -1>, 0> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:46:   required from ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:185:44:   required from ‘bool Eigen::AlignedBox<Scalar, Dim>::contains(const Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, 1, 2> >; _Scalar = double; int _AmbientDim = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:476:30:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:525:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h: In instantiation of ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > > >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:185:44:   required from ‘bool Eigen::AlignedBox<Scalar, Dim>::contains(const Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, 1, 2> >; _Scalar = double; int _AmbientDim = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:476:30:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:525:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:60: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<bool>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
   86 |           && SizeAtCompileTime * (Evaluator::CoeffReadCost + NumTraits<Scalar>::AddCost) <= EIGEN_UNROLLING_LIMIT
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:46:   required from ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:185:82:   required from ‘bool Eigen::AlignedBox<Scalar, Dim>::contains(const Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, 1, 2> >; _Scalar = double; int _AmbientDim = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:476:30:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:525:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h: In instantiation of ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> > >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:185:82:   required from ‘bool Eigen::AlignedBox<Scalar, Dim>::contains(const Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, 1, 2> >; _Scalar = double; int _AmbientDim = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:476:30:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:525:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:60: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 2> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<bool>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
   86 |           && SizeAtCompileTime * (Evaluator::CoeffReadCost + NumTraits<Scalar>::AddCost) <= EIGEN_UNROLLING_LIMIT
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:46:   required from ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:185:44:   required from ‘bool Eigen::AlignedBox<Scalar, Dim>::contains(const Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, 1, 3> >; _Scalar = double; int _AmbientDim = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:476:30:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:525:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h: In instantiation of ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > > >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:185:44:   required from ‘bool Eigen::AlignedBox<Scalar, Dim>::contains(const Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, 1, 3> >; _Scalar = double; int _AmbientDim = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:476:30:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:525:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:60: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> >, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<bool>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
   86 |           && SizeAtCompileTime * (Evaluator::CoeffReadCost + NumTraits<Scalar>::AddCost) <= EIGEN_UNROLLING_LIMIT
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:46:   required from ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:185:82:   required from ‘bool Eigen::AlignedBox<Scalar, Dim>::contains(const Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, 1, 3> >; _Scalar = double; int _AmbientDim = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:476:30:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:525:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h: In instantiation of ‘bool Eigen::DenseBase<Derived>::all() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> > >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Geometry/AlignedBox.h:185:82:   required from ‘bool Eigen::AlignedBox<Scalar, Dim>::contains(const Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Transpose<const Eigen::Matrix<double, 1, 3> >; _Scalar = double; int _AmbientDim = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:476:30:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:525:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:86:60: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<const Eigen::Transpose<const Eigen::Matrix<double, 1, 3> > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<bool>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
   86 |           && SizeAtCompileTime * (Evaluator::CoeffReadCost + NumTraits<Scalar>::AddCost) <= EIGEN_UNROLLING_LIMIT
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 3>; SrcXprType = Eigen::CwiseUnaryOp<scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 3>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 3>; Src = Eigen::CwiseUnaryOp<scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 3>; Src = Eigen::CwiseUnaryOp<scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 3>; Src = Eigen::CwiseUnaryOp<scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:714:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >; Derived = Eigen::Matrix<double, -1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >; _Scalar = double; int _Rows = -1; int _Cols = 3; int _Options = 0; int _MaxRows = -1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:44:9:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_sqrt_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:51:16:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_square_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:51:16:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:51:16:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:51:16:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_square_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:51:16:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:51:16:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > > > > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:70:20:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_square_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:70:20:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:70:20:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:70:20:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:70:20:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:70:20:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 6, 0, -1, 6>, -1, 1, true> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 4>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:89:9:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:89:9:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:89:9:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 6, 0, -1, 6> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:77:24:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:77:24:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:77:24:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:77:24:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::ArrayWrapper<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, -1, 1, true> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 3>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 3>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > >; Derived = Eigen::Matrix<double, -1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > >; Derived = Eigen::Matrix<double, -1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:377:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > >; _Scalar = double; int _Rows = -1; int _Cols = 3; int _Options = 0; int _MaxRows = -1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:83:34:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 3> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:92:22:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>, const Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:1139:53:   required from ‘struct Eigen::internal::evaluator<Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::Select<Eigen::CwiseBinaryOp<scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::Select<Eigen::CwiseBinaryOp<scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:96:22:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:1140:21:   required from ‘struct Eigen::internal::evaluator<Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::Select<Eigen::CwiseBinaryOp<scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; SrcXprType = Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>; Src = Eigen::Select<Eigen::CwiseBinaryOp<scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LT>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 3>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:96:22:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Array<double, -1, 6, 0, -1, 6>; SrcXprType = Eigen::CwiseUnaryOp<scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Array<double, -1, 6, 0, -1, 6>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Array<double, -1, 6, 0, -1, 6>; Src = Eigen::CwiseUnaryOp<scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:171:31:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; _Scalar = double; int _Rows = -1; int _Cols = 6; int _Options = 0; int _MaxRows = -1; int _MaxCols = 6]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; EvalReturnType = const Eigen::Array<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/edge_lengths.cpp:18:30:   required from ‘void igl::edge_lengths(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:66:19:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_sqrt_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_acos_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_acos_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 6, 0, -1, 6>; SrcXprType = Eigen::CwiseUnaryOp<scalar_acos_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 6, 0, -1, 6>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_acos_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Src = Eigen::CwiseUnaryOp<scalar_acos_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_acos_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Derived = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_acos_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >; Derived = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/dihedral_angles.cpp:89:9:   required from ‘void igl::dihedral_angles_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&, Eigen::PlainObjectBase<DerivedsqrD>&) [with DerivedL = Eigen::Matrix<double, -1, 6, 0, -1, 6>; DerivedA = Eigen::Matrix<double, -1, 4>; Derivedtheta = Eigen::Matrix<double, -1, 6, 0, -1, 6>; Derivedcos_theta = Eigen::Matrix<double, -1, 6, 0, -1, 6>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix_entries.cpp:70:32:   required from ‘void igl::cotmatrix_entries(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::PlainObjectBase<DerivedBC>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/cotmatrix.cpp:60:20:   required from ‘void igl::cotmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:134:19:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 6, 0, -1, 6> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_acos_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1> >’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:352:102:   required from ‘struct Eigen::internal::plain_object_eval<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, Eigen::Dense>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:1194:64:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3>, Eigen::internal::IndexBased, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:171:31:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >; _Scalar = double; int _Rows = -1; int _Cols = 3; int _Options = 0; int _MaxRows = -1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >; EvalReturnType = const Eigen::Array<double, -1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:85:98:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:1287:35: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1> >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
 1287 |                   : TraversalSize * evaluator<ArgType>::CoeffReadCost + int(CostOpType::value),
      |                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Array<double, -1, 3>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, member_sum<double>, 1>, 1, 3> >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Array<double, -1, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Array<double, -1, 3>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, member_sum<double>, 1>, 1, 3> >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:171:31:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >; _Scalar = double; int _Rows = -1; int _Cols = 3; int _Options = 0; int _MaxRows = -1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >; EvalReturnType = const Eigen::Array<double, -1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:85:98:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3>, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h:261:56:   required from ‘void Eigen::internal::sparselu_gemm(Eigen::Index, Eigen::Index, Eigen::Index, const Scalar*, Eigen::Index, const Scalar*, Eigen::Index, Scalar*, Eigen::Index) [with Scalar = double; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:152:38:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::mapbase_evaluator<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, const Eigen::Matrix<double, -1, 1> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >; Functor = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >; Func = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_gemm_kernel.h:266:56:   required from ‘void Eigen::internal::sparselu_gemm(Eigen::Index, Eigen::Index, Eigen::Index, const Scalar*, Eigen::Index, const Scalar*, Eigen::Index, Scalar*, Eigen::Index) [with Scalar = double; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:152:38:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<int, int>, Eigen::Matrix<int, -1, 1> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, int, int>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<int, int>, Eigen::Matrix<int, -1, 1> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<int, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_difference_op<int, int>, const Eigen::CwiseNullaryOp<scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseNullaryOp<linspaced_op<int, int>, Eigen::Matrix<int, -1, 1> > > >; Functor = assign_op<int, int>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<int, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<int, int>, Eigen::Matrix<int, -1, 1> > > >; Functor = Eigen::internal::assign_op<int, int>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<int, -1, 1>; Src = Eigen::CwiseBinaryOp<scalar_difference_op<int, int>, const Eigen::CwiseNullaryOp<scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseNullaryOp<linspaced_op<int, int>, Eigen::Matrix<int, -1, 1> > > >; Func = assign_op<int, int>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<int, int>, Eigen::Matrix<int, -1, 1> > > >; Derived = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/LinSpaced.h:64:64:   required from ‘Derived igl::LinSpaced(typename Derived::Index, const typename Derived::Scalar&, const typename Derived::Scalar&) [with Derived = Eigen::Matrix<int, -1, 1>; typename Derived::Index = long int; typename Derived::Scalar = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/colon.cpp:21:57:   required from ‘void igl::colon(L, S, H, Eigen::Matrix<T, -1, 1>&) [with L = int; S = int; H = long int; T = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/colon.cpp:30:20:   required from ‘void igl::colon(L, H, Eigen::Matrix<T, -1, 1>&) [with L = int; H = long int; T = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/slice.cpp:96:15:   required from ‘void igl::slice(const MatX&, const Eigen::DenseBase<Derived>&, int, MatY&) [with MatX = Eigen::SparseMatrix<double>; DerivedR = Eigen::Matrix<int, -1, 1>; MatY = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:143:10:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<int, int>, Eigen::Matrix<int, -1, 1> > > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<long int, -1, 1, 0, -1, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Map.h:145:52:   required from ‘Eigen::Map<MatrixType, MapOptions, StrideType>::Map(PointerArgType, Eigen::Index, const StrideType&) [with PlainObjectType = Eigen::Matrix<long int, -1, 1, 0, -1, 1>; int MapOptions = 0; StrideType = Eigen::Stride<0, 0>; PointerArgType = long int*; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:1083:12:   required from ‘Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::SparseMatrix<double>; _Scalar = double; int _Options = 1; _StorageIndex = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:684:15:   required from ‘Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::SparseMatrix(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::SparseMatrix<double>; _Scalar = double; int _Options = 1; _StorageIndex = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseQR/SparseQR.h:268:45:   required from ‘void Eigen::SparseQR<MatrixType, OrderingType>::_sort_matrix_Q() [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseQR/SparseQR.h:724:58:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::SparseQRMatrixQReturnType<SparseQRType>, Eigen::internal::assign_op<typename DstXprType::Scalar, typename DstXprType::Scalar>, Eigen::internal::Sparse2Sparse>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<typename DstXprType::Scalar, typename DstXprType::Scalar>&) [with DstXprType = Eigen::SparseMatrix<double>; SparseQRType = Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >; SrcXprType = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; typename DstXprType::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::SparseMatrix<double>; Src = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:842:27:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&) [with Dst = Eigen::SparseMatrix<double>; Src = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseAssign.h:19:37:   required from ‘Derived& Eigen::SparseMatrixBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; Derived = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:782:29:   required from ‘Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; _Scalar = double; int _Options = 0; _StorageIndex = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:308:11:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<long int, -1, 1, 0, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Matrix<long int, -1, 1, 0, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h: In instantiation of ‘bool Eigen::DenseBase<Derived>::any() const [with Derived = Eigen::CwiseBinaryOp<std::not_equal_to<double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/MatrixBase.h:297:38:   required from ‘bool Eigen::MatrixBase<Derived>::operator!=(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 1, 2>; Derived = Eigen::Matrix<double, 1, 2>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_simplex_squared_distance.cpp:70:11:   required from ‘void igl::point_simplex_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, typename DerivedEle::Index, Derivedsqr_d&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; Derivedp = Eigen::Matrix<double, 1, 2>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedsqr_d = double; Derivedc = Eigen::Matrix<double, 1, 2>; Derivedb = Eigen::Matrix<double, 1, -1>; typename DerivedEle::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_simplex_squared_distance.cpp:154:38:   required from ‘void igl::point_simplex_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, typename DerivedEle::Index, Derivedsqr_d&, Eigen::PlainObjectBase<DerivedC>&) [with int DIM = 2; Derivedp = Eigen::Matrix<double, 1, 2>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedsqr_d = double; Derivedc = Eigen::Matrix<double, 1, 2>; typename DerivedEle::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:849:43:   required from ‘void igl::AABB<DerivedV, DIM>::leaf_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; Scalar = double; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:451:26:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:110:60: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<std::not_equal_to<double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<bool>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  110 |           && SizeAtCompileTime * (Evaluator::CoeffReadCost + NumTraits<Scalar>::AddCost) <= EIGEN_UNROLLING_LIMIT
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h: In instantiation of ‘bool Eigen::DenseBase<Derived>::any() const [with Derived = Eigen::CwiseBinaryOp<std::not_equal_to<double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/MatrixBase.h:297:38:   required from ‘bool Eigen::MatrixBase<Derived>::operator!=(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 1, 3>; Derived = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_simplex_squared_distance.cpp:70:11:   required from ‘void igl::point_simplex_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, typename DerivedEle::Index, Derivedsqr_d&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; Derivedp = Eigen::Matrix<double, 1, 3>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedsqr_d = double; Derivedc = Eigen::Matrix<double, 1, 3>; Derivedb = Eigen::Matrix<double, 1, -1>; typename DerivedEle::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_simplex_squared_distance.cpp:154:38:   required from ‘void igl::point_simplex_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, typename DerivedEle::Index, Derivedsqr_d&, Eigen::PlainObjectBase<DerivedC>&) [with int DIM = 3; Derivedp = Eigen::Matrix<double, 1, 3>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedsqr_d = double; Derivedc = Eigen::Matrix<double, 1, 3>; typename DerivedEle::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:849:43:   required from ‘void igl::AABB<DerivedV, DIM>::leaf_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, Scalar, Scalar&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; Scalar = double; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:451:26:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/BooleanRedux.h:110:60: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<std::not_equal_to<double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::GenericNumTraits<bool>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:156:17:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 2>; Derivedbb_maxs = Eigen::Matrix<double, -1, 2>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:156:17:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 2>; Derivedbb_maxs = Eigen::Matrix<double, -1, 2>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 2>, 1, 2, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:98:46:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> >; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_simplex_squared_distance.cpp:134:28:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs2_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:156:17:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 3>; Derivedbb_maxs = Eigen::Matrix<double, -1, 3>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:156:17:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 3>; Derivedbb_maxs = Eigen::Matrix<double, -1, 3>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, 3>, 1, 3, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Dot.h:98:46:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_simplex_squared_distance.cpp:134:28:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_abs2_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/XprHelper.h:352:102:   required from ‘struct Eigen::internal::plain_object_eval<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, Eigen::Dense>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseDenseProduct.h:166:89:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::SparseShape, Eigen::DenseShape, ProductType>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::SparseMatrix<double>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >; int ProductType = 8; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::SparseMatrix<double>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >; Derived = Eigen::internal::generic_product_impl<Eigen::SparseMatrix<double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, Eigen::SparseShape, Eigen::DenseShape, 8>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::SparseMatrix<double>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >; Derived = Eigen::internal::generic_product_impl<Eigen::SparseMatrix<double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, Eigen::SparseShape, Eigen::DenseShape, 8>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:796:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::SparseMatrix<double>, Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, 0>; Func = assign_op<double, double>; typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::SparseMatrix<double>, Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, 0>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:714:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::SparseMatrix<double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::SparseMatrix<double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::SparseMatrix<double> >, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:488:13:   required from ‘bool igl::min_quad_with_fixed_solve(const min_quad_with_fixed_data<T>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with T = double; DerivedB = Eigen::Matrix<double, -1, -1>; DerivedY = Eigen::Matrix<double, -1, -1>; DerivedBeq = Eigen::Matrix<double, -1, -1>; DerivedZ = Eigen::Matrix<double, -1, -1>; Derivedsol = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:162:50:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Replicate<Eigen::Matrix<double, -1, -1>, -1, -1>, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:196:9:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 2>; Derivedbb_maxs = Eigen::Matrix<double, -1, 2>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:196:9:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 2>; Derivedbb_maxs = Eigen::Matrix<double, -1, 2>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<scalar_min_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:196:9:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 3>; Derivedbb_maxs = Eigen::Matrix<double, -1, 3>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<scalar_max_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:196:9:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&, const Eigen::MatrixBase<Derivedelements>&, int) [with DerivedEle = Eigen::Matrix<int, -1, -1>; Derivedbb_mins = Eigen::Matrix<double, -1, 3>; Derivedbb_maxs = Eigen::Matrix<double, -1, 3>; Derivedelements = Eigen::Matrix<int, -1, 1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:208:14:   required from ‘void igl::AABB<DerivedV, DIM>::init(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&) [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:45:12:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 1> > >::<unnamed enum>’ and ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h: In instantiation of ‘struct Eigen::internal::sparse_conjunction_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IteratorBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:345:8:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IteratorBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:45:7:   required from ‘Eigen::CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Eigen::Sparse>::CwiseBinaryOpImpl() [with BinaryOp = Eigen::internal::scalar_difference_op<double, double>; Lhs = const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>; Rhs = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double, double>; LhsType = const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>; RhsType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> >; Lhs = Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/../plugins/CommonCwiseBinaryOps.h:19:1:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::SparseMatrix<double>; Src = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:842:27:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&) [with Dst = Eigen::SparseMatrix<double>; Src = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseAssign.h:19:37:   required from ‘Derived& Eigen::SparseMatrixBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; Derived = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:782:29:   required from ‘Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; _Scalar = double; int _Options = 0; _StorageIndex = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:308:11:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:535:54: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  535 |     CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                        ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Core:493:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h: In instantiation of ‘struct Eigen::internal::diagonal_product_evaluator_base<Eigen::Matrix<double, -1, -1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1>, 1>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:835:8:   required from ‘struct Eigen::internal::product_evaluator<Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1>, 8, Eigen::DiagonalShape, Eigen::DenseShape, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:29:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1> >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1>; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1>; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Solve<Eigen::SimplicialLLT<Eigen::SparseMatrix<double>, 1, Eigen::AMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Solve<Eigen::SimplicialLLT<Eigen::SparseMatrix<double>, 1, Eigen::AMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::SimplicialLLT<Eigen::SparseMatrix<double>, 1, Eigen::AMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::SimplicialLLT<Eigen::SparseMatrix<double>, 1, Eigen::AMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:458:13:   required from ‘bool igl::min_quad_with_fixed_solve(const min_quad_with_fixed_data<T>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with T = double; DerivedB = Eigen::Matrix<double, -1, -1>; DerivedY = Eigen::Matrix<double, -1, -1>; DerivedBeq = Eigen::Matrix<double, -1, -1>; DerivedZ = Eigen::Matrix<double, -1, -1>; Derivedsol = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:162:50:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:775:48: warning: arithmetic between different enumeration types ‘Eigen::GenericNumTraits<double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  775 |     CoeffReadCost = NumTraits<Scalar>::MulCost + evaluator<MatrixType>::CoeffReadCost + evaluator<DiagonalType>::CoeffReadCost,
      |                                        ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::internal::IndexBased, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:775:114:   required from ‘struct Eigen::internal::diagonal_product_evaluator_base<Eigen::Matrix<double, -1, -1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1>, 1>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:835:8:   required from ‘struct Eigen::internal::product_evaluator<Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1>, 8, Eigen::DiagonalShape, Eigen::DenseShape, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:29:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Product<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 1> >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Solve<Eigen::SimplicialLLT<Eigen::SparseMatrix<double>, 1, Eigen::AMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Solve<Eigen::SimplicialLLT<Eigen::SparseMatrix<double>, 1, Eigen::AMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::SimplicialLLT<Eigen::SparseMatrix<double>, 1, Eigen::AMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::SimplicialLLT<Eigen::SparseMatrix<double>, 1, Eigen::AMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:458:13:   required from ‘bool igl::min_quad_with_fixed_solve(const min_quad_with_fixed_data<T>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with T = double; DerivedB = Eigen::Matrix<double, -1, -1>; DerivedY = Eigen::Matrix<double, -1, -1>; DerivedBeq = Eigen::Matrix<double, -1, -1>; DerivedZ = Eigen::Matrix<double, -1, -1>; Derivedsol = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:162:50:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:522:55: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::functor_traits<Eigen::internal::scalar_inverse_op<double> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  522 |     CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,
      |                                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/Core:491:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘void Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, DataMapper, mr, nr, ConjugateLhs, ConjugateRhs>::operator()(const DataMapper&, const LhsScalar*, const RhsScalar*, Index, Index, Index, ResScalar, Index, Index, Index, Index) [with LhsScalar = double; RhsScalar = double; Index = long int; DataMapper = Eigen::internal::blas_data_mapper<double, long int, 0, 0>; int mr = 1; int nr = 4; bool ConjugateLhs = false; bool ConjugateRhs = false; ResScalar = double]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/products/TriangularSolverMatrix.h:162:24:   required from ‘static void Eigen::internal::triangular_solve_matrix<Scalar, Index, 1, Mode, Conjugate, TriStorageOrder, 0>::run(Index, Index, const Scalar*, Index, Scalar*, Index, Eigen::internal::level3_blocking<Scalar, Scalar>&) [with Scalar = double; Index = long int; int Mode = 5; bool Conjugate = false; int TriStorageOrder = 0]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:102:12:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, Side, Mode, 0, -1>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 16, Eigen::OuterStride<> >; int Side = 1; int Mode = 5]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:182:21:   required from ‘void Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::solveInPlace(const Eigen::MatrixBase<OtherDerived>&) const [with int Side = 1; OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 16, Eigen::OuterStride<> >; _MatrixType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; unsigned int _Mode = 5]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/TriangularMatrix.h:511:37:   required from ‘void Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::solveInPlace(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 16, Eigen::OuterStride<> >; _MatrixType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; unsigned int _Mode = 5]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/TriangularMatrix.h:541:25:   required from ‘void Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::_solve_impl(const RhsType&, DstType&) const [with RhsType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 16, Eigen::OuterStride<> >; DstType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 16, Eigen::OuterStride<> >; _MatrixType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; unsigned int _Mode = 5]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Solve.h:147:26:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 5>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 16, Eigen::OuterStride<> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 16, Eigen::OuterStride<> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:140:9:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1119:22: warning: arithmetic between different enumeration types ‘Eigen::internal::gebp_kernel<double, double, long int, Eigen::internal::blas_data_mapper<double, long int, 0, 0>, 1, 4, false, false>::operator()(const Eigen::internal::blas_data_mapper<double, long int, 0, 0>&, const double*, const double*, long int, long int, long int, ResScalar, long int, long int, long int, long int)::<unnamed enum>’ and ‘Eigen::internal::gebp_kernel<double, double, long int, Eigen::internal::blas_data_mapper<double, long int, 0, 0>, 1, 4, false, false>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
 1119 |             blB += pk*RhsProgress;
      |                    ~~^~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1329:22: warning: arithmetic between different enumeration types ‘Eigen::internal::gebp_kernel<double, double, long int, Eigen::internal::blas_data_mapper<double, long int, 0, 0>, 1, 4, false, false>::operator()(const Eigen::internal::blas_data_mapper<double, long int, 0, 0>&, const double*, const double*, long int, long int, long int, ResScalar, long int, long int, long int, long int)::<unnamed enum>’ and ‘Eigen::internal::gebp_kernel<double, double, long int, Eigen::internal::blas_data_mapper<double, long int, 0, 0>, 1, 4, false, false>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
 1329 |             blB += pk*RhsProgress;
      |                    ~~^~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1497:22: warning: arithmetic between different enumeration types ‘Eigen::internal::gebp_kernel<double, double, long int, Eigen::internal::blas_data_mapper<double, long int, 0, 0>, 1, 4, false, false>::operator()(const Eigen::internal::blas_data_mapper<double, long int, 0, 0>&, const double*, const double*, long int, long int, long int, ResScalar, long int, long int, long int, long int)::<unnamed enum>’ and ‘Eigen::internal::gebp_kernel<double, double, long int, Eigen::internal::blas_data_mapper<double, long int, 0, 0>, 1, 4, false, false>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
 1497 |             blB += pk*RhsProgress;
      |                    ~~^~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> > >, Eigen::internal::IteratorBased, Eigen::internal::IteratorBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:682:97:   required from ‘Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::SparseMatrix(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> > >; _Scalar = double; int _Options = 0; _StorageIndex = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseRef.h:231:7:   required from ‘void Eigen::Ref<const Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>, _Options, _StrideType>::construct(const Expression&, Eigen::internal::false_type) [with Expression = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> > >; MatScalar = double; int MatOptions = 0; MatIndex = int; int Options = 0; StrideType = Eigen::OuterStride<>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseRef.h:190:16:   required from ‘Eigen::Ref<const Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>, _Options, _StrideType>::Ref(const Eigen::SparseMatrixBase<OtherDerived>&) [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> > >; MatScalar = double; int MatOptions = 0; MatIndex = int; int Options = 0; StrideType = Eigen::OuterStride<>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseBlock.h:128:88:   required from ‘Eigen::internal::sparse_matrix_block_impl<SparseMatrixType, BlockRows, BlockCols>::BlockType& Eigen::internal::sparse_matrix_block_impl<SparseMatrixType, BlockRows, BlockCols>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> > >; SparseMatrixType = Eigen::SparseMatrix<double>; int BlockRows = -1; int BlockCols = 1; BlockType = Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:661:20:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::SparseMatrix<double>; Src = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:842:27:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&) [with Dst = Eigen::SparseMatrix<double>; Src = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseAssign.h:19:37:   required from ‘Derived& Eigen::SparseMatrixBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; Derived = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseMatrix.h:782:29:   required from ‘Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::SparseQRMatrixQReturnType<Eigen::SparseQR<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> > >; _Scalar = double; int _Options = 0; _StorageIndex = int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:308:11:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:129:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::Block<Eigen::SparseMatrix<double>, -1, 1, true> >::<unnamed enum>’ and ‘Eigen::internal::sparse_conjunction_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::SparseMatrix<double>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IteratorBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  129 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 2> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 2>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> > >; Derived = Eigen::Matrix<double, 1, 2>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 2> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::Matrix<double, 1, 2> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 2>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > > >; Derived = Eigen::Matrix<double, 1, 2>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 2> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::Matrix<double, 1, 2> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 2> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 2> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 2>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 2>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >; Derived = Eigen::Matrix<double, 1, 2>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 2>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 2; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:83:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 2>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 2> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 3>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> > >; Derived = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::Matrix<double, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 3>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > > >; Derived = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::Matrix<double, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:69:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:99:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:37:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 3> > >::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 3>; Src = Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:732:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >; Derived = Eigen::Matrix<double, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:537:19:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:420:26:   required from ‘igl::AABB<DerivedV, DIM>::Scalar igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const RowVectorDIMS&, int&, Eigen::PlainObjectBase<Eigen::Matrix<typename DerivedV::Scalar, 1, DIM> >&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3; Scalar = double; RowVectorDIMS = Eigen::Matrix<double, 1, 3>; typename DerivedV::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/AABB.cpp:554:33:   required from ‘void igl::AABB<DerivedV, DIM>::squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<Derivedelements>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) const [with DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; int DIM = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:46:24:   required from ‘void {anonymous}::point_mesh_squared_distance(const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&, Eigen::PlainObjectBase<Derivedb>&) [with int DIM = 3; DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:86:37:   required from ‘static void {anonymous}::point_mesh_squared_distance_DIM_Handler<DerivedP, DerivedV, DerivedEle, DerivedsqrD, DerivedI, DerivedC, true>::compute(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/point_mesh_squared_distance.cpp:153:36:   required from ‘void igl::point_mesh_squared_distance(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, Eigen::PlainObjectBase<DerivedsqrD>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with DerivedP = Eigen::Matrix<double, -1, -1>; DerivedV = Eigen::Matrix<double, -1, -1>; DerivedEle = Eigen::Matrix<int, -1, -1>; DerivedsqrD = Eigen::Matrix<double, -1, 1>; DerivedI = Eigen::Matrix<int, -1, 1>; DerivedC = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:21:37:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ and ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 1, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Functor = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Func = add_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/NoAlias.h:58:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>; ExpressionType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; StorageBase = Eigen::MatrixBase]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_column_bmod.h:172:17:   required from ‘Eigen::Index Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::column_bmod(Eigen::Index, Eigen::Index, BlockScalarVector, ScalarVector&, BlockIndexVector, BlockIndexVector, Eigen::Index, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; BlockScalarVector = Eigen::Ref<Eigen::Matrix<double, -1, 1>, 0, Eigen::InnerStride<1> >; ScalarVector = Eigen::Matrix<double, -1, 1>; BlockIndexVector = Eigen::Ref<Eigen::Matrix<int, -1, 1>, 0, Eigen::InnerStride<1> >; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:635:31:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::mapbase_evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, 1> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Array<double, -1, 1>]’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:170:35:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T&) [with T = Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:1206:7:   required from ‘Eigen::internal::unary_evaluator<Eigen::Replicate<ArgType, RowFactor, ColFactor> >::unary_evaluator(const XprType&) [with ArgType = Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>; int RowFactor = 1; int ColFactor = 3; typename Eigen::Replicate<ArgType, RowFactor, ColFactor>::Scalar = double; typename Eigen::internal::evaluator_traits<typename Eigen::Replicate<ArgType, RowFactor, ColFactor>::NestedExpression>::Kind = Eigen::internal::IndexBased; typename Eigen::Replicate<ArgType, RowFactor, ColFactor>::NestedExpression = Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>; XprType = Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:93:64:   required from ‘Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:103:54:   required from ‘Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:702:7:   required from ‘Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >; Rhs = const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3>; typename Eigen::internal::traits<typename Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs>::Scalar = double; typename Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3>; typename Eigen::internal::traits<typename Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs>::Scalar = double; typename Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >; XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:671:70:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Array.h:171:31:   required from ‘Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >; _Scalar = double; int _Rows = -1; int _Cols = 3; int _Options = 0; int _MaxRows = -1; int _MaxCols = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/DenseBase.h:406:48:   required from ‘Eigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, const Eigen::Replicate<Eigen::PartialReduxExpr<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 3> >, Eigen::internal::member_sum<double>, 1>, 1, 3> >; EvalReturnType = const Eigen::Array<double, -1, 3>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:85:98:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, int, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix_intrinsic.cpp:25:30:   required from ‘void igl::massmatrix_intrinsic(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with Derivedl = Eigen::Matrix<double, -1, 3>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/massmatrix.cpp:45:32:   required from ‘void igl::massmatrix(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&, MassMatrixType, Eigen::SparseMatrix<Scalar>&) [with DerivedV = Eigen::Matrix<double, -1, -1>; DerivedF = Eigen::Matrix<int, -1, -1>; Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:135:20:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:903:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  903 |       EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:102: warning: bitwise operation between different enumeration types ‘Eigen::PlainObjectBase<Eigen::Array<double, -1, 1> >::<unnamed enum>’ and ‘Eigen::StorageOptions’ is deprecated [-Wdeprecated-enum-enum-conversion]
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                                                                                              ~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:904:28: note: in expansion of macro ‘EIGEN_IMPLIES’
  904 |                         && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
      |                            ^~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:125:95:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, LoopIndex, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >; int Mode = 5; int LoopIndex = 0; int Size = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:142:75:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h:61:5:   required from ‘static void Eigen::internal::LU_kernel_bmod<SegSizeAtCompileTime>::run(Eigen::Index, BlockScalarVector&, ScalarVector&, ScalarVector&, Eigen::Index&, Eigen::Index, Eigen::Index, IndexVector&, Eigen::Index, Eigen::Index) [with BlockScalarVector = Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; int SegSizeAtCompileTime = 2; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:210:53:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 0, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 0, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:125:95:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, LoopIndex, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; int Mode = 5; int LoopIndex = 0; int Size = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:142:75:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h:61:5:   required from ‘static void Eigen::internal::LU_kernel_bmod<SegSizeAtCompileTime>::run(Eigen::Index, BlockScalarVector&, ScalarVector&, ScalarVector&, Eigen::Index&, Eigen::Index, Eigen::Index, IndexVector&, Eigen::Index, Eigen::Index) [with BlockScalarVector = Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; int SegSizeAtCompileTime = 3; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:211:53:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 0, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 0, 1, false> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:125:95:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, LoopIndex, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >; int Mode = 5; int LoopIndex = 1; int Size = 2]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:130:67:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h:61:5:   required from ‘static void Eigen::internal::LU_kernel_bmod<SegSizeAtCompileTime>::run(Eigen::Index, BlockScalarVector&, ScalarVector&, ScalarVector&, Eigen::Index&, Eigen::Index, Eigen::Index, IndexVector&, Eigen::Index, Eigen::Index) [with BlockScalarVector = Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; int SegSizeAtCompileTime = 2; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:210:53:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 2, 2>, 0, Eigen::OuterStride<> >, 1, 2, false>, 1, 1, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 1, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:125:95:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, LoopIndex, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; int Mode = 5; int LoopIndex = 1; int Size = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:130:67:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h:61:5:   required from ‘static void Eigen::internal::LU_kernel_bmod<SegSizeAtCompileTime>::run(Eigen::Index, BlockScalarVector&, ScalarVector&, ScalarVector&, Eigen::Index&, Eigen::Index, Eigen::Index, IndexVector&, Eigen::Index, Eigen::Index) [with BlockScalarVector = Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; int SegSizeAtCompileTime = 3; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:211:53:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 1, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 1, 1, false> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h: In instantiation of ‘struct Eigen::internal::product_evaluator<Eigen::Product<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1>, 8, Eigen::DenseShape, Eigen::DenseShape, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:29:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Product<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1> >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1>; Functor = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Product<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1>; Func = assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:397:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Lhs = Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/products/GeneralMatrixMatrix.h:431:26:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Solve<Eigen::SparseLU<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Solve<Eigen::SparseLU<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::SparseLU<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::SparseLU<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:465:13:   required from ‘bool igl::min_quad_with_fixed_solve(const min_quad_with_fixed_data<T>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with T = double; DerivedB = Eigen::Matrix<double, -1, -1>; DerivedY = Eigen::Matrix<double, -1, -1>; DerivedBeq = Eigen::Matrix<double, -1, -1>; DerivedZ = Eigen::Matrix<double, -1, -1>; Derivedsol = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:162:50:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:498:61: warning: arithmetic between different enumeration types ‘Eigen::GenericNumTraits<double>::<unnamed enum>’ and ‘Eigen::internal::mapbase_evaluator<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, const Eigen::Matrix<double, -1, -1> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  498 |                   : InnerSize * (NumTraits<Scalar>::MulCost + LhsCoeffReadCost + RhsCoeffReadCost)
      |                                                     ~~~~~~~~^~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:525:38: warning: bitwise operation between different enumeration types ‘Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  525 |     Flags = ((unsigned int)(LhsFlags | RhsFlags) & HereditaryBits & ~RowMajorBit)
      |                            ~~~~~~~~~~^~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:546:38: warning: bitwise operation between different enumeration types ‘Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> > >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  546 |                         && (LhsFlags & RhsFlags & ActualPacketAccessBit)
      |                             ~~~~~~~~~^~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:547:39: warning: arithmetic between different enumeration types ‘Eigen::internal::product_evaluator<Eigen::Product<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1>, 8, Eigen::DenseShape, Eigen::DenseShape, double, double>::<unnamed enum>’ and ‘Eigen::internal::packet_traits<double>::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  547 |                         && (InnerSize % packet_traits<Scalar>::size == 0)
      |                             ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 2, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 2, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 2, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 2, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 2, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 2, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 2, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 2, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 2, false> >, const Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 2, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:125:95:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, LoopIndex, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; int Mode = 5; int LoopIndex = 2; int Size = 3]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/SolveTriangular.h:130:67:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 5>, Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_kernel_bmod.h:61:5:   required from ‘static void Eigen::internal::LU_kernel_bmod<SegSizeAtCompileTime>::run(Eigen::Index, BlockScalarVector&, ScalarVector&, ScalarVector&, Eigen::Index&, Eigen::Index, Eigen::Index, IndexVector&, Eigen::Index, Eigen::Index) [with BlockScalarVector = Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; int SegSizeAtCompileTime = 3; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_panel_bmod.h:211:53:   required from ‘void Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::panel_bmod(Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index, ScalarVector&, ScalarVector&, IndexVector&, IndexVector&, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; ScalarVector = Eigen::Matrix<double, -1, 1>; IndexVector = Eigen::Matrix<int, -1, 1>; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:613:21:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::OuterStride<> >, 1, 3, false>, 1, 2, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 2, 1, false> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
  681 |     CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,
      |                                     ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:730:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >; Functor = sub_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >; Func = sub_assign_op<double, double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CwiseBinaryOp.h:164:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 5>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU_column_bmod.h:168:7:   required from ‘Eigen::Index Eigen::internal::SparseLUImpl<Scalar, StorageIndex>::column_bmod(Eigen::Index, Eigen::Index, BlockScalarVector, ScalarVector&, BlockIndexVector, BlockIndexVector, Eigen::Index, GlobalLU_t&) [with Scalar = double; StorageIndex = int; Eigen::Index = long int; BlockScalarVector = Eigen::Ref<Eigen::Matrix<double, -1, 1>, 0, Eigen::InnerStride<1> >; ScalarVector = Eigen::Matrix<double, -1, 1>; BlockIndexVector = Eigen::Ref<Eigen::Matrix<int, -1, 1>, 0, Eigen::InnerStride<1> >; GlobalLU_t = Eigen::internal::LU_GlobalLU_t<Eigen::Matrix<int, -1, 1>, Eigen::Matrix<double, -1, 1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:635:31:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::factorize(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/SparseLU/SparseLU.h:129:7:   required from ‘void Eigen::SparseLU<_MatrixType, _OrderingType>::compute(const MatrixType&) [with _MatrixType = Eigen::SparseMatrix<double>; _OrderingType = Eigen::COLAMDOrdering<int>; MatrixType = Eigen::SparseMatrix<double>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:269:24:   required from ‘bool igl::min_quad_with_fixed_precompute(const Eigen::SparseMatrix<Scalar>&, const Eigen::MatrixBase<U>&, const Eigen::SparseMatrix<Scalar>&, bool, min_quad_with_fixed_data<T>&) [with T = double; Derivedknown = Eigen::Matrix<int, -1, 1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:160:40:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’:
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:665:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:349:33:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true> > >’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:416:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Redux.h:453:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/ProductEvaluators.h:552:75:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >; CoeffReturnType = double; Eigen::Index = long int]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:631:63:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Solve<Eigen::SparseLU<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Solve<Eigen::SparseLU<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::SparseLU<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/PlainObjectBase.h:571:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Solve<Eigen::SparseLU<Eigen::SparseMatrix<double>, Eigen::COLAMDOrdering<int> >, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/libigl/include/igl/min_quad_with_fixed.impl.h:465:13:   required from ‘bool igl::min_quad_with_fixed_solve(const min_quad_with_fixed_data<T>&, const Eigen::MatrixBase<U>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<DerivedEle>&, Eigen::PlainObjectBase<DerivedI>&, Eigen::PlainObjectBase<DerivedC>&) [with T = double; DerivedB = Eigen::Matrix<double, -1, -1>; DerivedY = Eigen::Matrix<double, -1, -1>; DerivedBeq = Eigen::Matrix<double, -1, -1>; DerivedZ = Eigen::Matrix<double, -1, -1>; Derivedsol = Eigen::Matrix<double, -1, -1>]’
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/test_robust_weight_transfer.cpp:162:50:   required from here
/home/fire/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer/thirdparty/eigen/Eigen/src/Core/CoreEvaluators.h:681:51: warning: arithmetic between different enumeration types ‘Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, false> >, Eigen::internal::IndexBased, double>::<unnamed enum>’ and ‘Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true> >::<unnamed enum>’ is deprecated [-Wdeprecated-enum-enum-conversion]
[2/2] Linking CXX executable /home/fire/godot-sandbox-demo/robust_weight_transfer/robust_weight_transfer.elf
~/godot-sandbox-demo/robust_weight_transfer/robust_skin_weight_transfer
